version: '2'
services:
  elasticsearch:
    image: elasticsearch:6.8.10
    container_name: es6
    environment:
      ES_JAVA_OPTS: -Djava.net.preferIPv4Stack=true -Xms1g -Xmx1g
      transport.host: 0.0.0.0
      discovery.type: single-node
      bootstrap.memory_lock: "true"
      discovery.zen.minimum_master_nodes: 1
      discovery.zen.ping.unicast.hosts: elasticsearch
      TZ: Asia/Shanghai
    ports:
      - "9200:9200"
      - "9300:9300"
  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
  redis:
    image: redis:7.0.4
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - "./data/redis:/data"
    command: redis-server --appendonly yes
    environment:
      - TZ=Asia/Shanghai
  postgres:
    image: postgres:14.4-alpine3.16
    container_name: pg11
    ports:
      - "5432:5432"
    volumes:
      - "./data/postgres:/var/lib/postgresql/data"
    environment:
      POSTGRES_PASSWORD: clink
      POSTGRES_DB: clink
      TZ: Asia/Shanghai
  nacos:
    image: nacos/nacos-server:v2.1.0
    container_name: nacos
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
    volumes:
      - ./data/nacos/logs/:/home/nacos/logs
    #      - ./data/nacos/custom.properties:/home/nacos/init.d/custom.properties
    ports:
      - "8848:8848"
  cassandra:
    image: cassandra:4.0.5
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      TZ: Asia/Shanghai
  mongo:
    image: mongo:5.0.9 #根据需要选择自己的镜像
    container_name: mongo
    restart: always
    ports:
      - 27017:27017 #对外暴露停供服务的端口，正式生产的时候理论不用暴露。
    volumes:
      - ./data/mongodb/data/db:/work/mongo/data # 挂载数据目录
      - ./data/mongodb/data/log:/var/log/mongodb  # 挂载日志目录
      - ./data/mongodb/data/config:/work/mongo/config  # 挂载配置目录
    command: [--auth] # 指定需要认证，mongdb默认是无认证的
  mysql:
    container_name: mysql5.7
    restart: always
    image: mysql:5.7.38
    volumes:
      - ./data/mysql/mydir:/mydir
      - ./data/mysql/datadir:/var/lib/mysql
      - ./data/mysql/conf/my.cnf:/etc/my.cnf
      # 数据库还原目录 可将需要还原的sql文件放在这里
      - ./data/mysql/source:/docker-entrypoint-initdb.d
    environment:
      - "MYSQL_ROOT_PASSWORD=cc@123"
      - "MYSQL_DATABASE=scada"
      - "TZ=Asia/Shanghai"
    ports:
      - 3306:3306
