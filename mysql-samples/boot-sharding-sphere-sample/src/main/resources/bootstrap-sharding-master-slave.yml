spring:
  shardingsphere:
    props:
      sql.show: true # sharding-sphere 是否打印sql 解析日志：默认false
      query.with.cipher.column: true #是否使用密文列查询
    datasource:
      names: ds0,ds1 # 配置的数据源名称
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driverClassName: com.mysql.jdbc.Driver
        jdbcUrl: jdbc:mysql://mysql-mysqlha-write.mysql.svc.cluster.local:3306/wjt_sharding_sphere?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
        maxPoolSize: 5
      ds1:
        type: com.zaxxer.hikari.HikariDataSource
        driverClassName: com.mysql.jdbc.Driver
        jdbcUrl: jdbc:mysql://mysql-mysqlha-write.mysql.svc.cluster.local:3306/wujt_sharding_sphere?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
        maxPoolSize: 5
    sharding:
      master-slave-rules: # 读写分离配置
        ds_0:
          master-data-source-name: ds0
          slave-data-source-names: ds1
        ds_1:
          master-data-source-name: ds1
          slave-data-source-names: ds0
      default-database-strategy: # 配置默认数据库的分片策略
        inline:
          sharding-column: id
          algorithm-expression: ds_$->{id % 2}
      binding-tables: orderc
      broadcast-tables: address
      tables:
        orderc:
          key-generator:
            column: id
            type: SNOWFLAKE
            props:
              worker:
                id: 123
          actual-data-nodes: ds_$->{0..1}.orderc_$->{0..1}
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: orderc_$->{id % 2}
#          databaseStrategy:  #可单独为每一个表设置分库策略
#            inline:
#              shardingColumn: id
#              algorithmExpression: ds_${user_id % 2}
      defaultDataSourceName: ds0
#      default-key-generator:
#        type: SNOWFLAKE
#        column: id
#      default-table-strategy:
#        none:
#        inline:
#          sharding-column: id
#          algorithm-expression: ds_${user_id % 2}
# 数据加密设置
#    encryptRule:
#      encryptors:
#        encryptor_aes:
#          type: aes
#          props:
#            aes.key.value: 123456abc
#        encryptor_md5:
#          type: md5
#      tables:
#        orderc:
#          columns:
#            name:
#              plainColumn: plain # 数据库列
#              cipherColumn: cipher
#              encryptor: encryptor_aes
#            order_id:
#              cipherColumn: order_cipher
#              encryptor: encryptor_md5
