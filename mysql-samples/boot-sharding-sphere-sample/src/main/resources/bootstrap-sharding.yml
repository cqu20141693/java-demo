sharding:
  jdbc:
    datasource:
      names: ds0,ds1
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driverClassName: com.mysql.jdbc.Driver
        jdbcUrl: jdbc:mysql://mysql-mysqlha-write.mysql.svc.cluster.local:3306/wjt_sharding_sphere?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
        maxPoolSize: 5
#        connectionTimeoutMilliseconds: 30000
#        idleTimeoutMilliseconds: 60000
#        maxLifetimeMilliseconds: 1800000
      ds1:
        type: com.zaxxer.hikari.HikariDataSource
        driverClassName: com.mysql.jdbc.Driver
        jdbcUrl: jdbc:mysql://mysql-mysqlha-write.mysql.svc.cluster.local:3306/wujt_sharding_sphere?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
        maxPoolSize: 5
#        connectionTimeoutMilliseconds: 30000
#        idleTimeoutMilliseconds: 60000
#        maxLifetimeMilliseconds: 1800000
    rules:
      sharding-rule:
        tables:
          orderc:
            actual-data-nodes: ds_$->{0..1}.orderc
            key-generator:
              column: id
              type: SNOWFLAKE
              props:
                worker:
                  id: 123
        default-database-strategy:
          standard:
            sharding-column: id
            sharding-algorithm:
              type: INLINE
              props:
                algorithm:
                  expression: ds_$->{user_id % 2}
#        broadcast-tables: address
        binding-tables: orderc
    config:
      masterslave: # 配置读写分离
        load-balance-algorithm-type: round_robin # 配置从库选择策略，提供轮询与随机，这里选择用轮询//random 随机 //round_robin 轮询
        name: db1s2
        master-data-source-name: ds0
        slave-data-source-names: ds1